---
import { generateRouteData, type PageProps as Props } from '../utils/route-data';

// Built-in CSS styles.
import '../style/props.css';
import '../style/reset.css';
import '../style/shiki.css';
import '../style/util.css';

// Components â€” can override built-in CSS, but not user CSS.
import ContentPanel from '../components/ContentPanel.astro';
import FallbackContentNotice from '../components/FallbackContentNotice.astro';
import Footer from '../components/Footer.astro';
import HeadSEO from '../components/HeadSEO.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import MarkdownContent from '../components/MarkdownContent.astro';
import RightSidebar from '../components/RightSidebar.astro';
import Sidebar from '../components/Sidebar.astro';
import SkipLink from '../components/SkipLink.astro';
import ThemeProvider from '../components/ThemeProvider.astro';
import PageFrame from '../layout/PageFrame.astro';
import TwoColumnContent from '../layout/TwoColumnContent.astro';
import Banner from '../components/Banner.astro';

// Remark component CSS (needs to override `MarkdownContent.astro`)
import '../style/asides.css';

// Important that this is the last import so it can override built-in styles.
import 'virtual:starlight/user-css';

const route = generateRouteData(Astro);
const pagefindEnabled =
	route.entry.slug !== '404' &&
	!route.entry.slug.endsWith('/404') &&
	route.entry.data.pagefind !== false;
---

<html
	lang={route.lang}
	dir={route.dir}
	data-has-toc={Boolean(route.toc)}
	data-has-sidebar={route.hasSidebar}
	data-has-hero={Boolean(route.entry.data.hero)}
>
	<head>
		<HeadSEO {...route} />
		<style>
			html:not([data-has-toc]) {
				--sl-mobile-toc-height: 0rem;
			}
			html:not([data-has-sidebar]) {
				--sl-content-width: 67.5rem;
			}
			/* Add scroll padding to ensure anchor headings aren't obscured by nav */
			html {
				/* Additional padding is needed to account for the mobile TOC */
				scroll-padding-top: calc(1.5rem + var(--sl-nav-height) + var(--sl-mobile-toc-height));
			}
			main {
				padding-bottom: 3vh;
			}
			@media (min-width: 50em) {
				[data-has-sidebar] {
					--sl-content-inline-start: var(--sl-sidebar-width);
				}
			}
			@media (min-width: 72em) {
				html {
					scroll-padding-top: calc(1.5rem + var(--sl-nav-height));
				}
			}
		</style>
	</head>
	<body>
		<ThemeProvider />
		<SkipLink {...route} />
		<PageFrame {...route}>
			<Header slot="header" {...route} />
			{route.hasSidebar && <Sidebar slot="sidebar" {...route} />}
			<TwoColumnContent {...route}>
				<RightSidebar slot="right-sidebar" {...route} />
				<main
					data-pagefind-body={pagefindEnabled}
					lang={route.entryMeta.lang}
					dir={route.entryMeta.dir}
				>
					{/* TODO: Revisit how this logic flows. */}
					<Banner {...route} />
					{
						route.entry.data.hero ? (
							<ContentPanel>
								<Hero {...route} />
								<MarkdownContent>
									<slot />
								</MarkdownContent>
							</ContentPanel>
						) : (
							<>
								<ContentPanel>
									<h1
										id="_top"
										data-page-title
										style="font-size: var(--sl-text-h1); line-height: var(--sl-line-height-headings); font-weight: 600; color: var(--sl-color-white); margin-top: 1rem;"
									>
										{route.entry.data.title}
									</h1>
									{route.isFallback && <FallbackContentNotice {...route} />}
								</ContentPanel>
								<ContentPanel>
									<MarkdownContent>
										<slot />
									</MarkdownContent>
									<Footer {...route} />
								</ContentPanel>
							</>
						)
					}
				</main>
			</TwoColumnContent>
		</PageFrame>
	</body>
</html>
